@page "/progressbar"
@implements IDisposable
<div>
    <div class="content-section introduction">
        <div class="feature-intro">
            <h1>ProgressBar</h1>
            <p>ProgressBar is a process status indicator.</p>
        </div>
    </div>

    <div class="content-section implementation">
        <h3 class="first">Dynamic</h3>
        <ProgressBar value="value1" />

        <h3>Static</h3>
        <ProgressBar value="value2" showValue="false" />

        <h3>Indeterminate</h3>
        <ProgressBar mode="indeterminate" style="height: .5em" />
    </div>
    <ProgressBarDoc/>
</div>

@code {
    private double value1 = 0;
    private double value2 = 50;
    private System.Timers.Timer timer;
    protected override void OnInitialized()
    {
        timer = new System.Timers.Timer();
        timer.Interval = 2000;
        timer.Elapsed += TimerElapsed;
        StartProgress();
    }
    private void TimerElapsed(object sender, System.Timers.ElapsedEventArgs e)
    {
        double newValue = value1 + Math.Floor(new Random().NextDouble() * 10) + 1;
        if (newValue >= 100)
        {
            newValue = 100;
        }
        value1 = newValue;

        StateHasChanged();
    }
    private void StartProgress()
    {
        timer.Start();
    }

    private void EndProgress()
    {
        timer.Stop();
    }

    void IDisposable.Dispose()
    {
        timer.Dispose();
    }
}
