@page "/toolbar"
@inject IJSRuntime js
@inject NavigationManager NavigationManager
<div>
    <div class="content-section introduction">
        <div class="feature-intro">
            <h1>Toolbar</h1>
            <p>Toolbar is a grouping component for buttons and other content.</p>
        </div>
    </div>

    <div class="content-section implementation">
        <Toolbar>
            <Lefttemplate>
                <Button label="New" icon="pi pi-plus" style="margin-right: .25em" />
                <Button label="Upload" icon="pi pi-upload" CssClass="p-button-success" />
                <i class="pi pi-bars p-toolbar-separator" style="margin-right: .25em" />
                <SplitButton label="Save" icon="pi pi-check" model="items" CssClass="p-button-warning" />
            </Lefttemplate>
            <Righttemplate>
                <Button icon="pi pi-search" style="margin-right: .25em" />
                <Button icon="pi pi-calendar" CssClass="p-button-success" style="margin-right: .25em" />
                <Button icon="pi pi-times" CssClass="p-button-danger" />
            </Righttemplate>
        </Toolbar>
    </div>
    <ToolbarDoc />
</div>

@code {
    private static IJSRuntime JS;
    private static NavigationManager Navigation;
    protected override void OnInitialized()
    {
        JS = js;
        Navigation = NavigationManager;
    }
    List<Menu> items = new List<Menu>()
    {
        new Menu() {
                    label= "Update",
                    icon= "pi pi-refresh"
                },
            new Menu()    {
                    label= "Delete",
                    icon= "pi pi-times"
                },
            new Menu()    {
                    label= "Vue Website",
                    icon= "pi pi-external-link",
                    command= async(CommandEventArgs eventArgs) => {
                        await JS.InvokeVoidAsync("setLocationHref","https://vuejs.org/");
                    }
                },
             new Menu()   {   label= "Upload",
                    icon= "pi pi-upload",
                    command= (CommandEventArgs eventArgs) => {
                          var uri = Navigation.BaseUri;
                          var newUri = $"{uri}fileupload";
                          Navigation.NavigateTo(newUri, forceLoad: true);
                    }
                }
    };
}
