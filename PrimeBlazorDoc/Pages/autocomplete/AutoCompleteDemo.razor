@page "/autocomplete"
@inject Service.CountryService countryService
<div>
    <div class="content-section introduction">
        <div class="feature-intro">
            <h1>AutoComplete</h1>
            <p>AutoComplete is an input component that provides real-time suggestions when being typed.</p>
        </div>
    </div>

    <div class="content-section implementation">
        <h3 class="first">Basic</h3>
        <AutoComplete @bind-model="country" suggestions="countriesBasic" complete="async(e)=> searchCountryBasic(e)" field="name" />
        <span style="marginLeft: .5em">Country:@(country==null?"none":country.name)</span>
    </div>
</div>

@code {
    private List<Models.Countries>? countries = null;
    private Models.Countries? country = null;
    private List<Models.Countries>? countriesBasic = null;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            this.countries = await this.countryService.getCountries();
        }
    }
    private async Task searchCountryBasic(string query)
    {
        var results = await this.countryService.getCountries();
        this.countriesBasic = results.Where(m => m.name.ToLower().StartsWith(query.ToLower())).ToList();
    }
}
