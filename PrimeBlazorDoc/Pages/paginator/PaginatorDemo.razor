@page "/paginator"
<div>
    <div class="content-section introduction">
        <div class="feature-intro">
            <h1>Paginator</h1>
            <p>Paginator is a generic component to display content in paged format.</p>
        </div>
    </div>

    <div class="content-section implementation">
        <h3 class="first">Default</h3>
        <Paginator @bind-first="first" @bind-rows="rows" totalRecords="totalRecords" rowsPerPageOptions="new List<int>(){10,20,30}"></Paginator>

        <h3 >Custom Template</h3>
        <Paginator first="first2" rows="rows2" totalRecords="totalRecords2" pageChange="onPageChangeCustom" template="FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink">
            <LeftTemplate>
                <Button icon="pi pi-refresh" />
            </LeftTemplate>
            <RightTemplate>
                <Button icon="pi pi-refresh" />
            </RightTemplate>
        </Paginator>
    </div>
    <PaginatorDoc />
</div>
<style lang="scss">
    .p-button.p-button-icon-only {
        border-radius: 0;
    }
</style>
@code {
    private int first = 0;
    private int rows = 10;
    private int totalRecords = 50;
    private int first2 = 0;
    private int rows2 = 1;
    private int totalRecords2 = 12;
    private void onPageChangeCustom(PageState pageState)
    {
        this.first2 = pageState.first;
        this.rows2 = pageState.rows;
    }
}
