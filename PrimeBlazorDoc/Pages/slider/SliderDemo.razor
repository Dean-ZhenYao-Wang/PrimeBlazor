@page "/slider"
<div>
    <div class="content-section introduction">
        <div class="feature-intro">
            <h1>Slider</h1>
            <p>Slider is an input component to provide a numerical input.</p>
        </div>
    </div>

    <div class="content-section implementation">
        <h3 class="first">Basic: @value1</h3>
        <Slider @bind-model="value1" />

        <h3>Input: @value2</h3>
        <Inputtext @bind-model="value2_str" type="number" changed="value2_strChanged" />
        <Slider @bind-model="value2" change="value2Changed" />

        <h3>Step: @value3</h3>
        <Slider @bind-model="value3" step="20" />

        <h3>Range: @value4</h3>
        <Slider @bind-models="value4" range="true" />

        <h3>Vertical: @value5</h3>
        <Slider @bind-model="value5" orientation="vertical" />
    </div>
    <SliderDoc/>
</div>

<style>
    .p-slider {
        position: relative;
        text-align: left;
    }

        .p-slider .p-slider-handle {
            position: absolute;
            width: 1.2em;
            height: 1.2em;
            cursor: default;
            -ms-touch-action: none;
            touch-action: none;
        }

        .p-slider .p-slider-range {
            position: absolute;
            font-size: .7em;
            display: block;
            border: 0;
            background-position: 0 0;
        }

    .p-slider-horizontal {
        height: .8em;
    }

        .p-slider-horizontal .p-slider-handle {
            top: -.3em;
            margin-left: -.6em;
        }

        .p-slider-horizontal .p-slider-range {
            top: 0;
            height: 100%;
        }

    .p-slider-vertical {
        width: .8em;
        height: 100px;
    }

        .p-slider-vertical .p-slider-handle {
            left: -.3em;
            margin-left: 0;
            margin-bottom: -.6em;
        }

        .p-slider-vertical .p-slider-range {
            left: 0;
            width: 100%;
            bottom: 0;
        }
</style>
@code {
    public double? value1 = null;
    public double? value2 = 50;
    public string value2_str;
    public double? value3 = 20;
    public double[] value4 = new double[] { 20, 80 };
    public double? value5 = 50;
    protected override void OnInitialized()
    {
        value2_str = this.value2.Value.ToString();
    }
    private void value2_strChanged(string newValue)
    {
        if (!newValue.Equals(value2.ToString()))
        {
            value2 = Convert.ToDouble(newValue);
        }
    }
    private void value2Changed(double[] newValues)
    {
        string newValue = newValues[0].ToString();
        if (!newValue.Equals(value2))
        {
            value2_str = newValues[0].ToString();
        }
    }
}
