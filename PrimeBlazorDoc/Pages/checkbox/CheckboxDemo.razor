@page "/checkbox"
<div>
    <div class="content-section introduction">
        <div class="feature-intro">
            <h1>Checkbox</h1>
            <p>Checkbox is an extension to standard checkbox element with theming.</p>
        </div>
    </div>

    <div class="content-section implementation">
        <h3 class="first">Multiple</h3>
        <div class="p-grid">
            <div class="p-col-12">
                <Checkbox inputId="city1" name="city" value='"Chicago"' @bind-model="cities" />
                <label for="city1" class="p-checkbox-label">Chicago</label>
            </div>
            <div class="p-col-12">
                <Checkbox inputId="city2" name="city" value='"Los Angeles"' @bind-model="cities" />
                <label for="city2" class="p-checkbox-label">Los Angeles</label>
            </div>
            <div class="p-col-12">
                <Checkbox inputId="city3" name="city" value='"New York"' @bind-model="cities" />
                <label for="city3" class="p-checkbox-label">New York</label>
            </div>
            <div class="p-col-12">
                <Checkbox inputId="city4" name="city" value='"San Francisco"'  @bind-model="cities" />
                <label for="city4" class="p-checkbox-label">San Francisco</label>
            </div>
        </div>
        <p>Selected Cities : <span style="font-weight: bold">@cities</span></p>

        <h3>Dynamic Values, Preselection, Value Binding and Disabled Option</h3>
        <div class="p-grid">
            @foreach(var theme in themes)
            {
                <div class="p-col-12">
                    <Checkbox inputId="@theme.Key" name="theme" value='theme' @bind-model="selectedThemes" disabled='theme.Key.Equals("U")'/>
                    <label for="@theme.Key" class="p-checkbox-label">
                        @theme.Name
                    </label>
                </div>
            }
        </div>
        <p>Selected Themes: <span style="font-weight: bold">@this.selectedThemes</span></p>
    </div>
</div>
@code {
    private ICollection<string> cities = new List<string>();
    private ICollection<Models.Theme> themes = new Models.Theme[]
    {
        new Models.Theme(){Name="Apollo",Key="A"},
        new Models.Theme(){Name="Babylon",Key="B"},
        new Models.Theme(){Name="Serenity",Key="S"},
        new Models.Theme(){Name= "Ultima", Key="U" }
    };
    private ICollection<Models.Theme> selectedThemes;
    protected override void OnInitialized()
    {
        selectedThemes = this.themes.Skip(1).Take(2).ToList();
    }
}
