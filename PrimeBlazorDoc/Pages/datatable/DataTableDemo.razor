@page "/datatable"
@inject Service.CarService carService
<div>
    <div class="content-section introduction">
        <div class="feature-intro">
            <h1>DataTable</h1>
            <p>DataTable displays data in tabular format.</p>
        </div>
    </div>

    <div class="content-section implementation">
        <h3 class="first">Basic</h3>
        <DataTable value="cars" 
            columns='new List<Column>(){
            new Column(){field=" Vin", header="Vin" },
            new Column(){field="Year", header="Year" },
            new Column(){field="Brand", header="Brand" },
            new Column(){field="Color", header="Color" }
            }'>
        </DataTable>

        <h3>Dynamic Columns</h3>
        @* <DataTable value="cars" columns="columns"></DataTable> *@
    </div>

    <DataTableDoc />
</div>

@code {
    private List<Column> columns = null;
    private List<Models.Car> cars = null;
    protected override void OnInitialized()
    {
        this.columns = new List<Column>()
        {
            new Column(){field="Vin", header=  "Vin"},
            new Column(){field="Year", header= "Year"},
            new Column(){field="Brand", header= "Brand"},
            new Column(){field="Color", header= "Color"}
        };
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            this.cars = await carService.getCarsSmall();
            StateHasChanged();
        }
    }
}
