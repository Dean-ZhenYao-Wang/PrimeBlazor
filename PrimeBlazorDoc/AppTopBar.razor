@implements IAsyncDisposable
@inject IJSRuntime JS
<div class="layout-topbar">
    <a class="menu-button" @onclick="async(e)=>await menubuttonClick.InvokeAsync(e)"><i class="pi pi-bars"></i></a>
    <NavLink href="/" class="logo">
        <img alt="logo" src="./assets/images/primevue-logo.png">
    </NavLink>
    <ul class="topbar-menu">
        <li><NavLink href="/setup">Get Started</NavLink></li>
        <li class="topbar-menu-themes">
            <a tabindex="0" @onclick="toggleThemesMenu" @onclick:preventDefault="true" class="themes-menu-link">Themes</a>
            <transition name="p-input-overlay" onenter="AppTopBar.onThemesMenuEnter" onleave="AppTopBar.onThemesMenuLeave">
                <ul v-if="themesMenuVisible">
                    <li class="topbar-submenu-header">THEMING</li>
                    <li><NavLink href="/icons" @onclick="hideThemesMenu"><i class="pi pi-fw pi-search" /><span>Icons</span></NavLink></li>
                    <li class="topbar-submenu-header">FREE THEMES</li>
                    <li><a href="#" onclick="AppTopBar.changeTheme(event, 'lara-light-blue', false)"><img src="./assets/images/layouts/themeswitcher-nova-light.png" alt="Nova Light" /><span>Nova Light</span></a></li>
                    <li><a onclick="AppTopBar.changeTheme(event, 'nova-dark', false)"><img src="./assets/images/layouts/themeswitcher-nova-dark.png" alt="Nova Dark" /><span>Nova Dark</span></a></li>
                    <li><a onclick="AppTopBar.changeTheme(event, 'nova-colored', false)"><img src="./assets/images/layouts/themeswitcher-nova-colored.png" alt="Nova Colored" /><span>Nova Colored</span></a></li>
                    <li><a onclick="AppTopBar.changeTheme(event, 'luna-amber', true)"><img src="./assets/images/layouts/themeswitcher-luna-amber.png" alt="Luna Amber" /><span>Luna Amber</span></a></li>
                    <li><a onclick="AppTopBar.changeTheme(event, 'luna-blue', true)"><img src="./assets/images/layouts/themeswitcher-luna-blue.png" alt="Luna Blue" /><span>Luna Blue</span></a></li>
                    <li><a onclick="AppTopBar.changeTheme(event, 'luna-green', true)"><img src="./assets/images/layouts/themeswitcher-luna-green.png" alt="Luna Green" /><span>Luna Green</span></a></li>
                    <li><a onclick="AppTopBar.changeTheme(event, 'luna-pink', true)"><img src="./assets/images/layouts/themeswitcher-luna-pink.png" alt="Luna Pink" /><span>Luna Pink</span></a></li>
                    <li><a onclick="AppTopBar.changeTheme(event, 'rhea', false)"><img src="./assets/images/layouts/themeswitcher-rhea.png" alt="Rhea" /><span>Rhea</span></a></li>
                </ul>
            </transition>
        </li>
        <li><NavLink href="/support">Support</NavLink></li>
    </ul>
</div>
@code {
    [Parameter] public EventCallback<MouseEventArgs> menubuttonClick { get; set; }

    private string theme = "lara-light-blue";
    private bool themesMenuVisible = false;
    private IJSObjectReference module;
    private DotNetObjectReference<AppTopBar> dotNetHelper;
    protected override async Task OnInitializedAsync()
    {
        dotNetHelper = DotNetObjectReference.Create(this);
        module = await JS.InvokeAsync<IJSObjectReference>("import", "./AppTopBar.razor.js");
        await JS.InvokeVoidAsync("AppTopBar.OnAfterRenderAsync", dotNetHelper);
    }
    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (module is not null)
            await module.DisposeAsync();
        dotNetHelper?.Dispose();
    }
    private void toggleThemesMenu(MouseEventArgs mouseEvent)
    {
        this.themesMenuVisible = !this.themesMenuVisible;
        this.hideThemesMenu();
    }
    [JSInvokable]
    public string getTheme()
    {
        return this.theme;
    }
    [JSInvokable]
    public void setTheme(string value)
    {
        this.theme = value;
    }
    [JSInvokable]
    public bool getThemesMenuVisible()
    {
        return this.themesMenuVisible;
    }
    [JSInvokable]
    public void setThemesMenuVisible(bool value)
    {
        this.themesMenuVisible = value;
    }
    [JSInvokable]
    private void hideThemesMenu()
    {
        this.themesMenuVisible = false;
    }
}