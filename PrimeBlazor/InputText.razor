<input type="@type" class="@css @CssClass" id="@Id" disabled="@disabled" value="@value" @oninput="(async(e)=>await onInputEvent(e))" />
@code {
    [Parameter] public string type { get; set; } = "text";
    [Parameter]
    public string Id { get; set; } = Guid.NewGuid().ToString();
    [Parameter]
    public string CssClass { get; set; } = string.Empty;
    [Parameter]
    public string value { get; set; } = string.Empty;
    [Parameter]
    public bool disabled { get; set; }
    [Parameter]
    public EventCallback<string> valueChanged { get; set; }
    [Parameter]public EventCallback<string>changed{ get; set; }
    private async Task onInputEvent(ChangeEventArgs eventArgs)
    {
        await valueChanged.InvokeAsync(eventArgs.Value?.ToString());
        await changed.InvokeAsync(eventArgs.Value?.ToString());
    }
    private string css
    {
        get
        {
            string returnCSS = "p-inputtext p-component";
            if (filled())
            {
                returnCSS += " p-filled";
            }
            return returnCSS;
        }
    }
    private bool filled()
    {
        return !string.IsNullOrWhiteSpace(this.value);
    }
}
